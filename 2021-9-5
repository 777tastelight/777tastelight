给定一个整数数组，判断是否存在重复元素。

如果存在一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。

 

示例 1:

输入: [1,2,3,1]
输出: true
示例 2:

输入: [1,2,3,4]
输出: false
示例 3:

输入: [1,1,1,3,3,4,3,2,4,2]
输出: true

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/contains-duplicate
//




bool containsDuplicate(int* nums, int numsSize){
int i =1;
for(numsSize=0;i<=sizeof nums;numsSize++)
{

for(i=1;i<sizeof nums;i++)
{if(*(nums+numsSize)==*(nums+numsSize+i))
{printf("true");
break;
}
if(numsSize==sizeof nums-1)
printf("false");
}
}
return 0;}
88. 合并两个有序数组
给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。

请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。

注意：最终，合并后数组不应由函数返回，而是存储在数组 nums1 中。为了应对这种情况，nums1 的初始长度为 m + n，其中前 m 个元素表示应合并的元素，后 n 个元素为 0 ，应忽略。
nums2 的长度为 n
//void merge(int* nums1, int nums1Size, int m, int* nums2, int nums2Size, int n){
int i=0,j=0;
for(i=m;i<m+n;i++)
{

        nums1[i]=nums2[j];
        j++;
}
int t=0,p=0,q=0;
for (p=0;p<m+n;p++)
{
    for(q=0;q<m+n;q++)
{
    if(nums1[q]>nums1[q+1])
    {
        t=nums1[p];
        nums1[p]=nums1[p+1];
        nums1[p+1]=t;
    }
}
}
return nums1;
}
